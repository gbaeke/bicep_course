[{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"Repeatable infrastructure","pillar":"Operational Excellence","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Template.ParameterStrongType/","severity":"Awareness","resource":"All resources"},"description":"Template string parameters can optionally specify a strong type. When parameter files are expanded, if the parameter value does not match the type this rule fails. Support is provided by PSRule for Azure for the following types:\n\n- Resource type - Specify a resource type.\n  For example Microsoft.OperationalInsights/workspaces.   If a resource type is specified the parameter value must be a resource id of that type.\n- Location - Specify location as the strong type.\n  If location is specified, the parameter value must be a valid Azure location.","displayName":"Parameter value should match strong type","moduleName":"PSRule.Rules.Azure","name":"Azure.Template.ParameterStrongType","recommendation":"Consider updating the parameter value to a value that matches the specifed strong type.","synopsis":"Set the parameter value to a value that matches the specified strong type."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000227","ruleName":"Azure.Template.ParameterStrongType","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2021_12","azure.WAF/pillar":"Operational Excellence"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"Repeatable infrastructure","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Template.ExpressionLength/","resource":"All resources","severity":"Awareness","pillar":"Operational Excellence","reviewed":"2021-11-21"},"description":"Extremely long expressions may be difficult to read and debug. Avoid using expressions that exceed 24,576 characters in length.","displayName":"Template expressions should not exceed a maximum length","moduleName":"PSRule.Rules.Azure","name":"Azure.Template.ExpressionLength","recommendation":"Consider updating the expression to reduce complexity and length.","synopsis":"Template expressions should not exceed the maximum length."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000228","ruleName":"Azure.Template.ExpressionLength","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2021_12","azure.WAF/pillar":"Operational Excellence"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Deployment.OutputSecretValue/","resource":"Deployment","severity":"Critical","pillar":"Security","resourceType":"Microsoft.Resources/deployments","reviewed":"2025-04-11"},"description":"This rule checks for cases when a sensitive value is output from a deployment. For example, if a parameter is marked as secure and then assigned to an output value.\nDon't include any values in an ARM template or Bicep output that could potentially expose sensitive information. The output from each deployment is stored in the deployment history. If the output contains sensitive information, the output value is leaked to the deployment history.\nExamples of secrets are:\n\n- Parameters using the secureString or secureObject type.\n- Output from list* functions such as listKeys.\n\nOutputs are recorded in clear texts within deployment history and logs. Logs are often exposed at multiple levels including CI pipeline logs, Azure Activity Logs, and SIEM systems.\n<!-- security:note rotate-secret -->","displayName":"Deployment exposes a secret in output","moduleName":"PSRule.Rules.Azure","name":"Azure.Deployment.OutputSecretValue","recommendation":"Consider removing any output values that return secret values in code.","synopsis":"Outputting a sensitive value from deployment may leak secrets into deployment history or logs."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000279","ruleName":"Azure.Deployment.OutputSecretValue","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2022_06","azure.WAF/pillar":"Security"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Deployment.AdminUsername/","resource":"Deployment","severity":"Awareness","pillar":"Security","resourceType":"Microsoft.Resources/deployments","reviewed":"2024-10-26"},"description":"Resource properties can be configured using a hardcoded value or Azure Bicep/ template expressions. When specifying sensitive values use secure parameters. Secure parameters use the @secure decorator in Bicep or the secureString / secureObject type.\nSensitive values that use deterministic expressions such as hardcoded string literals or variables are not secure. These values can be read by anyone with read access to deployment history or logs. Logs are often exposed at multiple levels including CI pipeline logs, Azure Activity Logs, and SIEM systems.\n<!-- security:note rotate-secret -->","displayName":"Deployment uses deterministic credential values","moduleName":"PSRule.Rules.Azure","name":"Azure.Deployment.AdminUsername","recommendation":"Sensitive properties should be passed as parameters. Avoid using deterministic or hardcoded values for sensitive properties.","synopsis":"A sensitive property set from deterministic or hardcoded values is not secure."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000284","ruleName":"Azure.Deployment.AdminUsername","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2022_09","azure.WAF/pillar":"Security"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Deployment.SecureParameter/","resource":"Deployment","severity":"Critical","pillar":"Security","resourceType":"Microsoft.Resources/deployments","reviewed":"2025-04-11"},"description":"This rule uses a heuristics to determine if a parameter should use a secure type based on how it is named. For example if the parameter is named password it is likely to contain a password value. However, there are cases when the parameter name may be confused with a sensitive value, but the value is not sensitive. See notes below for more details.\nAzure Bicep and Azure Resource Manager (ARM) templates can be used to deploy resources to Azure. When deploying Azure resources, sensitive values such as passwords, certificates, and keys should be passed as secure parameters. Secure parameters use the @secure decorator in Bicep or the secureString / secureObject type.\nParameters that do not use secure types are recorded in deployment history and logs. These values can be retrieved by anyone with read access to the deployment history and logs.\n<!-- security:note rotate-secret -->\n<!-- security:note non-secret-values -->","displayName":"Deployment parameter name implies it is secret but is a non-secure value","moduleName":"PSRule.Rules.Azure","name":"Azure.Deployment.SecureParameter","recommendation":"Consider using secure parameters for any parameter that contain sensitive information.","synopsis":"Sensitive parameters that have been not been marked as secure may leak the secret into deployment history or logs."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000408","ruleName":"Azure.Deployment.SecureParameter","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2023_12","azure.WAF/pillar":"Security"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Deployment.SecureValue/","resource":"Deployment","severity":"Critical","pillar":"Security","resourceType":"Microsoft.Resources/deployments","reviewed":"2025-04-11"},"description":"This rule checks for cases when a non-secure value is assigned to a resource property that contains sensitive information. For example, a regular parameter or hard coded variable is used to set the value property of an Azure Key Vault secret. This property is used to store the secret value in the Key Vault, however the value has been leaked.\nAzure Bicep and Azure Resource Manager (ARM) templates can be used to deploy resources to Azure. When deploying Azure resources, sensitive values such as passwords, certificates, and keys should be passed as secure parameters. Secure parameters use the @secure decorator in Bicep or the secureString / secureObject type.\nParameters that do not use secure types are recorded in deployment history and logs. These values can be retrieved by anyone with read access to the deployment history and logs. Logs are often exposed at multiple levels including CI pipeline logs, Azure Activity Logs, and SIEM systems.\n<!-- security:note rotate-secret -->\n<!-- security:note non-secret-values -->","displayName":"Deployment sets a secret property with a non-secure value","moduleName":"PSRule.Rules.Azure","name":"Azure.Deployment.SecureValue","recommendation":"Consider using secure parameters for setting the value of any sensitive resource properties.","synopsis":"A secret property set from a non-secure value may leak the secret into deployment history or logs."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000316","ruleName":"Azure.Deployment.SecureValue","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2024_12","azure.WAF/pillar":"Security"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Resources/deployments/helper","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Deployment.SecretLeak/","resource":"Deployment","severity":"Critical","pillar":"Security","resourceType":"Microsoft.Resources/deployments","reviewed":"2025-04-11"},"description":"This rule detects cases when a sensitive value is passed to a parameter that is not marked as secure. For example, you used listKeys to get a storage account key and then passed the value to a parameter of a child module. The parameter on the child module is not marked as secure, so the value has been leaked by the child deployment.\nAzure Bicep and Azure Resource Manager (ARM) templates can be used to deploy resources to Azure. When deploying Azure resources, sensitive values such as passwords, certificates, and keys should be passed as secure parameters. Secure parameters use the @secure decorator in Bicep or the secureString / secureObject type.\nParameters that do not use secure types are recorded in deployment history and logs. These values can be retrieved by anyone with read access to the deployment history and logs.\n<!-- security:note rotate-secret -->\n<!-- security:note non-secret-values -->","displayName":"Deployment parameter contains a secret that is not secured","moduleName":"PSRule.Rules.Azure","name":"Azure.Deployment.SecretLeak","recommendation":"Consider using secure parameters for any parameter that contain sensitive information.","synopsis":"Sensitive parameters that have been not been marked as secure may leak the secret into deployment history or logs."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000459","ruleName":"Azure.Deployment.SecretLeak","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":0,"position":0,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2025_06","azure.WAF/pillar":"Security"},"targetName":"/Users/geertbaeke/projects/bicep_course/step2.bicep","targetType":"Microsoft.Resources/deployments","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/serverfarms/myAppServicePlan","subscriptionId":null},"info":{"annotations":{"category":"CO:03 Cost data and reporting","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Resource.UseTags/","resource":"All resources","severity":"Awareness","pillar":"Cost Optimization","ms-content-id":"d8480c0d-e41c-441a-9b03-0dc9c340c149","reviewed":"2023-04-20"},"description":"Azure Resource Manager (ARM) supports a flexible tagging model that allows each resource to be tagged. Tags are additional metadata that improves identification of resources and aids lifecycle management.\nAzure stores tags as name/ value pairs such as environment = production or costCode = 349921.\nA well defined tagging approach improves the management, billing, and automation operations of resources. When planning tags, identify information that is meaningful to business and technical staff.\nAzure provides several built-in policies to managed tags. Using these policies help enforce a tagging standard can reduce overall management Resource tags can be inherited from subscriptions or resource groups using Azure Policy.","displayName":"Use resource tags","moduleName":"PSRule.Rules.Azure","name":"Azure.Resource.UseTags","recommendation":"Consider tagging resources using a standard convention. Identify mandatory and optional tags then tag all resources and resource groups using this standard.\nAlso consider using Azure Policy to enforce mandatory tags.","synopsis":"Azure resources should be tagged using a standard convention."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["The resource is not tagged.","Path tags: Does not exist."],"ref":"AZR-000166","ruleName":"Azure.Resource.UseTags","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":15,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Cost Optimization"},"targetName":"myAppServicePlan","targetType":"Microsoft.Web/serverfarms","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/serverfarms/myAppServicePlan","subscriptionId":null},"info":{"annotations":{"category":"SE:01 Security baseline","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Resource.AllowedRegions/","resource":"All resources","severity":"Important","pillar":"Security","reviewed":"2024-02-17"},"description":"Azure supports deployment to many locations around the world called regions. Many organizations have requirements that limit where data can be stored or processed. This is commonly known as data residency.\nMost Azure resources must be deployed to a specific region. To align with your organizational requirements, you may choose to limit the regions that resources can be deployed to.\nSome resources, particularly those related to preview services or features, may not be available in all regions.","displayName":"Use allowed regions","moduleName":"PSRule.Rules.Azure","name":"Azure.Resource.AllowedRegions","recommendation":"Consider deploying resources to allowed regions to align with your organizational requirements. Also consider using Azure Policy to enforce allowed regions at runtime.","synopsis":"Resources should be deployed to allowed regions."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000167","ruleName":"Azure.Resource.AllowedRegions","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":15,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Security"},"targetName":"myAppServicePlan","targetType":"Microsoft.Web/serverfarms","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/serverfarms/myAppServicePlan","subscriptionId":null},"info":{"annotations":{"category":"Resiliency and dependencies","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.PlanInstanceCount/","resource":"App Service","severity":"Important","pillar":"Reliability","ms-content-id":"6f3eff05-1bd0-4c82-a5a5-573fc8e0beda","resourceType":"Microsoft.Web/serverfarms"},"description":"App Services Plans provides a configurable number of instances that will run apps. When a single instance is configured your app may be temporarily unavailable during unplanned interruptions. In most circumstances, Azure will self heal faulty app service instances automatically. However during this time there may interruptions to your workload.\nThis rule does not apply to consumption or elastic App Services Plans.","displayName":"Use two or more App Service Plan instances","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.PlanInstanceCount","recommendation":"Consider using an App Service Plan with at least two (2) instances.","synopsis":"App Service Plan should use a minimum number of instances for failover."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path sku.capacity: Does not exist."],"ref":"AZR-000071","ruleName":"Azure.AppService.PlanInstanceCount","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":15,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Reliability"},"targetName":"myAppServicePlan","targetType":"Microsoft.Web/serverfarms","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/serverfarms/myAppServicePlan","subscriptionId":null},"info":{"annotations":{"category":"RE:05 Regions and availability zones","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.AvailabilityZone/","resource":"App Service","severity":"Important","pillar":"Reliability","resourceType":"Microsoft.Web/serverfarms"},"description":"App Service plans support zone redundancy, which distributes your application running within the plan across Availablity Zones. Each Availability Zone is a group of phyiscally separated data centers. Deploying your application with zone redundancy:\n\n- Scales your plan to a minimum of 3 instances in a highly available configuration.\n  Additional instances can be added manually or on-demand by using autoscale.\n- Improves the resiliency against service disruptions or issues affecting a single zone.\n\nAdditionally:\n\n- Even Distribution: If the instance count is larger than 3 and divisible by 3, instances are evenly distributed across the three zones.\n- Partial Distribution: Instance counts beyond 3*N are spread across the remaining one or two zones to ensure balanced distribution.\n\nImportant Configuring zone redundancy with per-application scaling is possible but may increase costs and administrative overhead. When perSiteScaling is enabled, each application can have its own scaling rules and run on dedicated instances. To maintain zone redundancy, it is crucial that each application’s scaling rules ensure a minimum of 3 instances. Without explicitly configuring this minimum, the application may not meet the zone redundancy requirement.","displayName":"Deploy app service plan instances using availability zones","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.AvailabilityZone","recommendation":"Consider using enabling zone redundancy using availability zones to improve the resiliency of your solution.","synopsis":"Deploy app service plan instances using availability zones in supported regions to ensure high availability and resilience."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path sku.name: The app service plan (myAppServicePlan) is not deployed with a SKU that supports zone-redundancy.","Path sku.tier: The app service plan (myAppServicePlan) is not deployed with a SKU that supports zone-redundancy.","Path properties.zoneRedundant: Does not exist."],"ref":"AZR-000442","ruleName":"Azure.AppService.AvailabilityZone","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":15,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2024_09","azure.WAF/pillar":"Reliability"},"targetName":"myAppServicePlan","targetType":"Microsoft.Web/serverfarms","time":6},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/serverfarms/myAppServicePlan","subscriptionId":null},"info":{"annotations":{"category":"Application capacity","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.MinPlan/","resource":"App Service","severity":"Important","pillar":"Performance Efficiency","ms-content-id":"97b58cfa-7b7e-4630-ac13-4596defe1795","resourceType":"Microsoft.Web/serverfarms"},"description":"Azure App Services provide a range of different plans that can be used to scale your application. Each plan provides different levels of performance and features.\nTo get you started a number of entry level plans are available. The Free, Shared, and Basic plans can be used for limited testing and development. However these plans are not suitable for production use. Production workloads are best suited to standard and premium plans with PremiumV3 the newest plan.\nThis rule does not apply to consumption or elastic App Services Plans used for Azure Functions.","displayName":"Use App Service production SKU","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.MinPlan","recommendation":"Consider using a standard or premium plan for hosting apps on Azure App Service.","synopsis":"Use at least a Standard App Service Plan."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path sku.tier: Is set to 'Free'."],"ref":"AZR-000072","ruleName":"Azure.AppService.MinPlan","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":15,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Performance Efficiency"},"targetName":"myAppServicePlan","targetType":"Microsoft.Web/serverfarms","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"CO:03 Cost data and reporting","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Resource.UseTags/","resource":"All resources","severity":"Awareness","pillar":"Cost Optimization","ms-content-id":"d8480c0d-e41c-441a-9b03-0dc9c340c149","reviewed":"2023-04-20"},"description":"Azure Resource Manager (ARM) supports a flexible tagging model that allows each resource to be tagged. Tags are additional metadata that improves identification of resources and aids lifecycle management.\nAzure stores tags as name/ value pairs such as environment = production or costCode = 349921.\nA well defined tagging approach improves the management, billing, and automation operations of resources. When planning tags, identify information that is meaningful to business and technical staff.\nAzure provides several built-in policies to managed tags. Using these policies help enforce a tagging standard can reduce overall management Resource tags can be inherited from subscriptions or resource groups using Azure Policy.","displayName":"Use resource tags","moduleName":"PSRule.Rules.Azure","name":"Azure.Resource.UseTags","recommendation":"Consider tagging resources using a standard convention. Identify mandatory and optional tags then tag all resources and resource groups using this standard.\nAlso consider using Azure Policy to enforce mandatory tags.","synopsis":"Azure resources should be tagged using a standard convention."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["The resource is not tagged.","Path tags: Does not exist."],"ref":"AZR-000166","ruleName":"Azure.Resource.UseTags","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Cost Optimization"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:01 Security baseline","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.Resource.AllowedRegions/","resource":"All resources","severity":"Important","pillar":"Security","reviewed":"2024-02-17"},"description":"Azure supports deployment to many locations around the world called regions. Many organizations have requirements that limit where data can be stored or processed. This is commonly known as data residency.\nMost Azure resources must be deployed to a specific region. To align with your organizational requirements, you may choose to limit the regions that resources can be deployed to.\nSome resources, particularly those related to preview services or features, may not be available in all regions.","displayName":"Use allowed regions","moduleName":"PSRule.Rules.Azure","name":"Azure.Resource.AllowedRegions","recommendation":"Consider deploying resources to allowed regions to align with your organizational requirements. Also consider using Azure Policy to enforce allowed regions at runtime.","synopsis":"Resources should be deployed to allowed regions."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000167","ruleName":"Azure.Resource.AllowedRegions","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"ms-content-id":"e19fbe7e-da05-47d4-8de1-2fdf52ada662","severity":"Critical","resource":"App Service","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.MinTLS/","category":"SE:07 Encryption","reviewed":"2025-03-07","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots","pillar":"Security"},"description":"The minimum version of TLS that Azure App Service accepts is configurable. Older TLS versions are no longer considered secure by industry standards, such as PCI DSS.\nApp Service lets you disable outdated protocols and enforce TLS 1.2. By default, a minimum of TLS 1.2 is enforced.","displayName":"App Service site allows insecure TLS versions","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.MinTLS","recommendation":"Consider configuring the minimum supported TLS version to be 1.2. Also consider using Azure Policy to audit or enforce this configuration.","synopsis":"App Service should not accept weak or deprecated transport protocols for client-server communication."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path properties.siteConfig.minTlsVersion: Minimum TLS version is set to {0}."],"ref":"AZR-000073","ruleName":"Azure.AppService.MinTLS","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:08 Hardening resources","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.RemoteDebug/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Remote debugging can be enabled on apps running within Azure App Services.\nTo enable remote debugging, App Service allows connectivity to additional ports. While access to remote debugging ports is authenticated, the attack service for an app is increased.","displayName":"Disable App Service remote debugging","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.RemoteDebug","recommendation":"Consider disabling remote debugging when not in use.","synopsis":"Disable remote debugging on App Service apps when not in use."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000074","ruleName":"Azure.AppService.RemoteDebug","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_12","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.NETVersion/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots","reviewed":"2024-03-21"},"description":"Within a App Service app, the version of .NET used to run application/ site code is configurable.\nOvertime, a specific version of .NET may become outdated and no longer supported by Microsoft. This can lead to security vulnerabilities or are simply not able to use the latest security features.\n.NET 6.0 and .NET 7.0 are approaching end of support.","displayName":"Use a newer .NET version","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.NETVersion","recommendation":"Consider updating the site to use a newer .NET version such as v8.0.","synopsis":"Configure applications to use newer .NET versions."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000075","ruleName":"Azure.AppService.NETVersion","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2024_03","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.PHPVersion/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots","reviewed":"2024-03-24"},"description":"Within a App Service app, the version of PHP runtime used to run application/ site code is configurable.\nOvertime, a specific version of PHP may become outdated and no longer supported by Microsoft in Azure App Service. This can lead to security vulnerabilities or are simply not able to use the latest security features.\nPHP 8.0 and 8.1 are approaching end of support.","displayName":"Use a newer PHP runtime version","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.PHPVersion","recommendation":"Consider updating the site to use a newer PHP runtime version such as 8.2.","synopsis":"Configure applications to use newer PHP runtime versions."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000076","ruleName":"Azure.AppService.PHPVersion","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2024_03","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"Application design","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.AlwaysOn/","resource":"App Service","severity":"Important","pillar":"Reliability","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots","reviewed":"2023-04-15"},"description":"Azure App Service apps are automatically unloaded when there's no traffic. Unloading apps reduces resource consumption when apps share a single App Services Plan. After an app have been unloaded, the next web request will trigger a cold start of the app. A cold start of the app can cause request timeouts.\nWeb apps using continuous WebJobs or WebJobs triggered with a CRON expression must use always on to start.","displayName":"Use App Service Always On","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.AlwaysOn","recommendation":"Consider enabling Always On for each App Services app.","synopsis":"Configure Always On for App Service apps."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path Properties.siteConfig.alwaysOn: Does not exist."],"ref":"AZR-000077","ruleName":"Azure.AppService.AlwaysOn","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_12","azure.WAF/pillar":"Reliability"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"PE:07 Code and infrastructure","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.HTTP2/","resource":"App Service","severity":"Awareness","pillar":"Performance Efficiency","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots","reviewed":"2024-04-29"},"description":"Azure App Service has native support for HTTP/2, but by default it is disabled. HTTP/2 offers a number of improvements over HTTP/1.1, including:\n\n- Connections are fully multiplexed, instead of ordered and blocking.\n- Connections are reused, reducing connection establishment overhead.\n- Headers are compressed to reduce overhead.","displayName":"Use HTTP/2 connections for App Service apps","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.HTTP2","recommendation":"Consider using HTTP/2 for Azure Services apps to improve protocol efficiency.","synopsis":"Use HTTP/2 instead of HTTP/1.x to improve protocol efficiency."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path Properties.siteConfig.http20Enabled: Does not exist."],"ref":"AZR-000078","ruleName":"Azure.AppService.HTTP2","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_12","azure.WAF/pillar":"Performance Efficiency"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"RE:04 Target metrics","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.WebProbe/","resource":"App Service","severity":"Important","pillar":"Reliability","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service monitors a specific path for each web app instance to determine health status. The monitored path should implement functional checks to determine if the app is performing correctly. The checks should include dependencies including those that may not be regularly called.\nRegular checks of the monitored path allow Azure App Service to route traffic based on availability.","displayName":"Web apps use health probes","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.WebProbe","recommendation":"Consider configuring a health probe to monitor instance availability.","synopsis":"Configure and enable instance health probes."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path properties.siteConfig.healthCheckPath: Does not exist."],"ref":"AZR-000079","ruleName":"Azure.AppService.WebProbe","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2022_06","azure.WAF/pillar":"Reliability"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"RE:04 Target metrics","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.WebProbePath/","resource":"App Service","severity":"Important","pillar":"Reliability","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service monitors a specific path for each web app instance to determine health status. The monitored path should implement functional checks to determine if the app is performing correctly. The checks should include dependencies including those that may not be regularly called.\nRegular checks of the monitored path allow Azure App Service to route traffic based on availability.","displayName":"Web apps use a dedicated health probe path","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.WebProbePath","recommendation":"Consider using a dedicated health probe endpoint that implements functional checks.","synopsis":"Configure a dedicated path for health probe requests."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path properties.siteConfig.healthCheckPath: Does not exist."],"ref":"AZR-000080","ruleName":"Azure.AppService.WebProbePath","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2022_06","azure.WAF/pillar":"Reliability"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:07 Encryption","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.WebSecureFtp/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service supports configuration of FTP and SFTP for uploading site content. By default, both FTP and SFTP are enabled. In many circumstances, use of FTP or SFTP is not required for automated deployments.\nWhen interactive deployments are required consider using SFTP instead of FTP. Use of FTP alone is not sufficient to prevent disclosure of sensitive information that may be transferred.","displayName":"Web apps disable insecure FTP","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.WebSecureFtp","recommendation":"Consider disabling insecure FTP and configure SFTP only when required. Also consider using Azure Policy to audit or enforce this configuration.","synopsis":"Web apps should disable insecure FTP and configure SFTP when required."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path Properties.siteConfig.ftpsState: Does not exist."],"ref":"AZR-000081","ruleName":"Azure.AppService.WebSecureFtp","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2022_06","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:02 Secured development lifecycle","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.NodeJsVersion/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"In an App Service app, you can configure the Node.js runtime version used to run your application or site code.\nExtended support for Node.js 18 LTS will end on April 30, 2025. While apps hosted on App Service will continue to operate, security updates and customer support for Node.js 18 LTS will no longer be provided after this date.\nTo avoid potential security vulnerabilities and minimize risks for your App Service apps, it is recommended to upgrade your apps to Node.js 20 LTS before April 30, 2025.","displayName":"Use a supported Node.js runtime version","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.NodeJsVersion","recommendation":"Consider updating applications to use supported Node.js runtime versions to maintain security and support.","synopsis":"Configure applications to use supported Node.js runtime versions."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000428","ruleName":"Azure.AppService.NodeJsVersion","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2024_06","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:05 Identity and access management","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.ManagedIdentity/","resource":"App Service","severity":"Important","pillar":"Security","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service apps must authenticate to Azure resources such as Azure SQL Databases. App Service can use managed identities to authenticate to Azure resource without storing credentials.\nUsing Azure managed identities have the following benefits:\n\n- You don't need to store or manage credentials.\nAzure automatically generates tokens and performs rotation.\n- You can use managed identities to authenticate to any Azure service that supports Azure AD authentication.\n- Managed identities can be used without any additional cost.","displayName":"App Service apps uses a managed identity","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.ManagedIdentity","recommendation":"Consider configuring a managed identity for each App Service app. Also consider using managed identities to authenticate to related Azure services.","synopsis":"Configure managed identities to access Azure resources."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path identity.type: The field 'identity.type' does not exist."],"ref":"AZR-000082","ruleName":"Azure.AppService.ManagedIdentity","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_12","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"PE:05 Scaling and partitioning","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.ARRAffinity/","resource":"App Service","severity":"Awareness","pillar":"Performance Efficiency","ms-content-id":"3f07def6-6e5e-4f87-8b5d-3a0baf6631e5","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service apps use Application Request Routing (ARR) by default. ARR uses a cookie to route subsequent client requests back to the same instance when an app is scaled to two or more instances. This benefits stateful applications, which may hold session information in instance memory.\nFor stateless applications, disabling ARR allows Azure App Service more evenly distribute load.","displayName":"Disable Application Request Routing","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.ARRAffinity","recommendation":"Azure App Service sites make use of Application Request Routing (ARR) by default. Consider disabling ARR affinity for stateless applications.","synopsis":"Disable client affinity for stateless services."},"level":"Error","outcome":"Fail","outcomeReason":"Processed","reason":["Path properties.clientAffinityEnabled: The field 'properties.clientAffinityEnabled' does not exist."],"ref":"AZR-000083","ruleName":"Azure.AppService.ARRAffinity","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Performance Efficiency"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0},{"detail":{},"field":{"resourceGroupName":null,"resourceId":"/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/ps-rule-test-rg/providers/Microsoft.Web/sites/6950582743e8b","subscriptionId":null},"info":{"annotations":{"category":"SE:07 Encryption","online version":"https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AppService.UseHTTPS/","resource":"App Service","severity":"Important","pillar":"Security","ms-content-id":"b26053bc-db4a-487a-8fb1-11c438c8d493","resourceType":"Microsoft.Web/sites,Microsoft.Web/sites/slots"},"description":"Azure App Service apps are configured by default to accept encrypted and unencrypted connections. HTTP connections can be automatically redirected to use HTTPS when the HTTPS Only setting is enabled.\nUnencrypted communication to App Service apps could allow disclosure of information to an untrusted party.","displayName":"App Service allows unencrypted traffic","moduleName":"PSRule.Rules.Azure","name":"Azure.AppService.UseHTTPS","recommendation":"When access using unencrypted HTTP connection is not required consider enabling HTTPS Only. Also consider using Azure Policy to audit or enforce this configuration.","synopsis":"Unencrypted communication could allow disclosure of information to an untrusted party."},"level":"Error","outcome":"Pass","outcomeReason":"Processed","ref":"AZR-000084","ruleName":"Azure.AppService.UseHTTPS","runId":"79f7417fbdf7382fea9ec77f5baa0adec505c06f","source":[{"file":"/Users/geertbaeke/projects/bicep_course/step2.bicep","line":29,"position":5,"type":"Template"}],"tag":{"release":"GA","ruleSet":"2020_06","azure.WAF/pillar":"Security"},"targetName":"6950582743e8b","targetType":"Microsoft.Web/sites","time":0}]